version:  '2'

services:

  zookeeper:
    container_name: zookeeper
    image: wurstmeister/zookeeper
    network_mode: host
    ports:
    - "2181:2181"
    expose:
    - "2181"
    environment:
     ZOOKEEPER_CLIENT_PORT: 2181
     ZOOKEEPER_TICK_TIME: 2000

#  kafka:
#    container_name: kafka
#    image: wurstmeister/kafka
#    ports:
#    - "9095:9095"
#    expose:
#    - "9095"
#    depends_on:
#    - "zookeeper"
#    network_mode: host
#    environment:
#     KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9095
#     KAFKA_ADVERTISED_HOST_NAME: localhost
#     KAFKA_ZOOKEEPER_CONNECT: localhost:2181
#    volumes:
#    - '/var/run/docker.sock:/var/run/docker.sock'

#  mysql:
#
#    image: mysql:5.7
#    ports:
#      - 3306:3306
#    container_name: mysql
#    environment:
#      - MYSQL_ROOT_PASSWORD = 12345
#      - MYSQL_USER = root
#      - MYSQL_DATABASE = login
#    volumes:
#      - '/opt/datasql:/var/lib/mysql'
#    network_mode: "host"
#    hostname: localhost
#    restart: always

#  mongodb:
#    image: mongo:3.2-jessie
#    ports:
#    - 27017:27017
#    container_name: "mongo-knowledgevault"
#    network_mode: host
#    volumes:
#    - '../data/mongo:/data/db'
#    environment:
#      MONGO_INITDB_DATABASE: userDetails

#  user-registration:
#    image: user-registration
#    build: user-registration-service/
#    container_name: user-registration
#    network_mode: host
#    depends_on:
#    - kafka
#    - mongodb
#    ports:
#    - "8083:8083"
#    expose:
#    - "8083"

#  user-authentication:
#    image: user-authentication
#    build: user-authentication-service/
#    container_name: user-registration-container
#    network_mode: host
#    depends_on:
#    - kafka
#    - mysql
#    ports:
#    - "8084:8084"
#    expose:
#    - "8084"
  
  angular:
    image: knowledge-vault-frontend
    build: knowledge-vault-frontend/.
    ports: 
    - 4200:4200
    expose: 
    - 4200
    container_name: angular

#  gateway:
#    image: zuulgateway:v1
#    build: zuulgateway/
#    restart: always
#    container_name: zuul-container
#    network_mode: host
#    depends_on:
#    - mongodb
#    ports:
#    - 8081:8081
#    expose:
#    - 8081
